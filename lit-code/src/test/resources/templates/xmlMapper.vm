<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="${mapper.longClassName}">
    <resultMap id="BaseResultMap" type="${model.longClassName}">
#foreach($column in ${table.columns})
#if(${column.primaryKey})
#set($primaryKey = $column)
        <id column="${column.name}" property="${column.camelName}"/>
#elseif($column.name != 'tenant_id')
        <result column="${column.name}" property="${column.camelName}"/>
#end
#end
    </resultMap>
    
    <sql id="base_column_list">
#set($columnSize = ${table.columns.size()})
#foreach($column in ${table.columns})
#if($column.name != 'tenant_id')${column.name}#end#if($velocityCount < $columnSize && $column.name != 'tenant_id'), #end
#end

    </sql>

    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="base_column_list"/>
        from ${table.name}
        where ${primaryKey.name} = #{id} and tenant_id = #{tenantId}
    </select>

    <select id="findList" resultMap="BaseResultMap" parameterType="${qo.longClassName}">
        select <include refid="base_column_list"/>
        from ${table.name}
        <!-- 自定义查询条件 待补充  -->
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="${primaryKey.camelName}" parameterType="${model.longClassName}">
        insert into ${table.name}
        <trim prefix="(" suffix=")" suffixOverrides=",">
#foreach($column in ${table.columns})
#if($column.name != 'tenant_id')
            <if test="${column.camelName} != null">
                ${column.name},
            </if>
#else
            tenant_id,
#end
#end
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
#foreach($column in ${table.columns})
#if(${column.name} == 'tenant_id')
            #{tenantId},
#else
            <if test="${column.camelName} != null">
                #{${column.camelName}},
            </if>
#end
#end
        </trim>
    </insert>

    <update id="updateById" parameterType="${model.longClassName}">
        update ${table.name}
        <set>
#foreach($column in ${table.columns})
#if(!${column.isPrimaryKey})
#if($column.name != 'tenant_id')
        <if test="${column.camelName} != null">
            ${column.name} = #{${column.camelName}},
        </if>
#end
#end
#end
        </set>
        where ${primaryKey.name} = #{${primaryKey.camelName}} and tenant_id = #{tenantId}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete from ${table.name} where ${primaryKey.name} = #{id} and tenant_id = #{tenantId}
    </delete>

</mapper>